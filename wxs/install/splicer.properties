# Properties file that contains all the configuration
# options that the servlet filter based ObjectGrid session
# manager can be configured to use.
#
# This properties file can be made to hold all the default
# values to be assigned to these configuration settings, and
# individual settings can be overridden using ANT Task
# properties, if this properties file is used in conjunction
# with the filtersplicer ANT task.

# A string value of either "REMOTE" or "EMBEDDED".  The default is REMOTE.
# If it is set to "REMOTE", the session data will be stored outside of
# the server on which the web application is running. If it is set to
# "EMBEDDED", an embedded WebSphere eXtreme Scale container will start
# in the application server process on which the web application is running.

objectGridType = REMOTE

# A string value that defines the name of the ObjectGrid
# instance used for a particular web application. The default name
# is session. This property must reflect the objectGridName in both
# the objectgrid xml and deployment xml files used to start the eXtreme
# Scale containers.

objectGridName = session

# Catalog Server can be contacted to obtain a client side
# ObjectGrid instance.  The value needs to be of the
# form "host:port<,host:port>", where the host is the listener host
# on which the catalog server is running, and the port is the listener
# port for that catalog server process.
# This list can be arbitrarily long and is used for bootstrapping only.
# The first viable address will be used.  It is optional inside WebSphere
# if the catalog.services.cluster property is configured.

# catalogHostPort = host:port<,host:port>

# An integer value (in seconds) that defines the time in seconds between
# writing of updated sessions to ObjectGrid. The default is 10. This property
# is only used when objectGridType is set to REMOTE. Possible values are
# from 0 to 300. 0 means updated sessions are written to the ObjectGrid
# at the end of servlet service method call for each request.

replicationInterval = 10

# An integer value that defines the number of session references
# kept in memory. The default is 1000. This property is only used when
# objectGridType is set to REMOTE. When the number of sessions stored
# in memory in the web container exceeds this value, the least recently
# accessed session is invalidated from the web container. If a request
# comes in for that session after it's been invalidated, a new session
# will be created (with a new session ID if reuseSessionId=false),
# populated with the invalidated session's attributes. This value should
# always be set to be higher than the maximum size of the web container
# thread pool to avoid contention on this session cache.

sessionTableSize = 1000

# A string value of either "true" or "false", default is "true".
# It is to control whether we store session data as a whole entry
# or store each attribute separately.
# This property was referred to as persistenceMechanism in the
# previous filter-based implementation, with the possible values
# of ObjectGridStore (fragmented) and ObjectGridAtomicSessionStore
# (not fragmented).

fragmentedSession = true

# A string value of either "true" or "false", default is "false".
# Enables eXtreme Scale client security. This setting needs to match
# the securityEnabled setting in the eXtreme Scale server properties
# file. If the settings do not match, an exception occurs.

securityEnabled = false

# Specifies the client credential authentication support.
#   The possible values are:
#   Never      - The client does not support credential authentication.
#   Supported* - The client supports the credential authentication if and only if the server
#                supports too.
#   Required   - The client requires the credential authentication.
#   The default value is Supported.

# credentialAuthentication =

# Specifies the retry count for authentication if the credential
# is expired. If the value is set to 0, there will not be
# any authentication retry.

# authenticationRetryCount =

# Specifies the name of the class that implements the
# com.ibm.websphere.objectgrid.security.plugins.CredentialGenerator
# interface. This class is used to get credentials for clients.

# credentialGeneratorClass =

# Specifies the properties for the CredentialGenerator implementation
# class. The properties are set to the object with the setProperties(String)
# method. The credentialGeneratorProps value is used only if the value of the
# credentialGeneratorClass property is not null.

# credentialGeneratorProps =

# The file location of the objectgrid xml file.
# The built-in xml file packaged in the eXtreme Scale library
# will automatically be loaded if this property
# is not specified and if objectGridType=EMBEDDED

# objectGridXML =

# The file location of the objectGrid deployment policy xml file.
# The built-in xml file packaged in the eXtreme Scale library
# will automatically be loaded if this property
# is not specified and if objectGridType=EMBEDDED

# objectGridDeploymentXML =

# A string of IBM WebSphere trace specification,
# useful for all other application servers besides WebSphere.

# traceSpec =

# A string of trace file location.
# useful for all other application servers besides WebSphere.

# traceFile=

# This property should be set if you require sessions to be
# accessible across hosts. The value will be the name of the
# common domain between the hosts.

# cookieDomain=

# This property should be set to the same path you have configured
# for your application server cookie settings. The default path
# is /.

# cookiePath=

# Set to true if the underlying web container will reuse
# session ID's across requests to different hosts. Default is
# false. The value of this should be the same as what is set
# in the web container.

# reuseSessionId=

# A string value of either "true" or "false". The default is
# "false". Per the servlet specification, HTTP Sessions cannot
# be shared across web applications. An extension to the servlet
# specification is provided to allow this sharing.

# shareSessionsAcrossWebApps = false

# Set to true if you want to enable urlRewriting.  Default is
# false. The value of this should reflect what is set in the
# web container settings for session management.

# useURLEncoding = false

# Set to false if you want to disable cookies as the session tracking
# mechanism.  Default is true. The value of this should reflect what
# is set in the web container settings for session management.

# useCookies = true

# A string value of either "true" or "false", default is "false".
# Enables eXtreme Scale client Http session statistics tracking.

# enableSessionStats = false

# A string of eXtreme Scale client Http session statistics specification,

# sessionStatsSpec = session.all=enabled

# Set to true if your environment contains multiple applications that
# use unique cookie names. Default is false, which assumes all applications
# are using the same cookie name.

# applicationQualifiedCookies = false

# Set to the implementation of the com.ibm.websphere.xs.sessionmanager.SessionIDOverride
# interface that determines the HttpSession id based on the HttpServletRequest object.
# Default is to use the id derived from HttpSession.getId().

# sessionIdOverrideClass=

# The prefix of the two cookies that are added to the HTTP response that
# represent the ID of the session object in the data grid and the session
# handle that contains the session's data. Default is IBM

# cookieNamePrefix = IBM

# When listenerMode = true (default), use the web container to generate sessions.
# If it is set to false, the web container will not be used.
# Setting listenerMode=false is only supported when
# reuseSessionId = true, sessionTableSize > 0, and when installed on WebSphere
# Application Server.

# listenerMode = true

# The number of minutes of inactivity after which an HttpSession will be invalidated
# by timeout. Only applies if listenerMode=false. Otherwise this setting should be
# configured in your application server settings.

# maxInactiveInterval = 30

# Only applies when listenerMode=false. When this property is set to true, all
# listeners configured for this web application will get the HttpSessionListener.sessionCreated
# call whenever a session is created, or a session is retrieved from the remote grid.
# Examples of this would be when an application server fails, or the
# sessionTableSize is exceeded and a session has to be brought back into the
# application server from the remote grid. HttpSessionListener.sessionDestroyed will also be
# called when a session is invalidated from the in-memory session cache if the sessionTableSize
# limit is exceeded.

# sessionCreatedOnFailover = false

# When this property is set to true, the exchange of the WXS cookie(s) will be restricted to HTTPS
# sessions only. When listenerMode=false, this will apply to the JSESSIONID cookie as well.

# cookieSecure = false

# Set this property to the location of the client override xml corresponding to the remote grid being used.
# The client override xml file can be used to override the transaction timeout for this client to
# the remote grid. The value can be an absolute file path to the xml located on the application server
# file systems or a relative path to a file that may be packaged in the web application.

# clientOverrideXML =

# By default, the result of the javax.servlet.http.HttpServletRequest's
# isRequestedSessionIdValid() method will be determined the first time the method is called and cached
# for subsequent calls. Set this property to false to not cache the result of the
# javax.servlet.http.HttpServletRequest's isRequestedSessionIdValid() method.

# useCacheOnIsValidRequest = true

# Set this property to check for and remove attributes that have been orphaned in the attributes map.
# Default is false. Only applicable when reuseSessionId and fragmentedSession are also set to true.

# removeOrphanedAttributes = false

# Set this property when removeOrphanedAttributes = true to specify the start hour (0-23).
# The default is 0.

# removeOrphanedAttributesStart = 0

# Set this property when removeOrphanedAttributes = true to specify the interval to run in hours.
# The default is 24.

# removeOrphanedAttributesInterval = 24
